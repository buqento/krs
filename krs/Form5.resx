<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>