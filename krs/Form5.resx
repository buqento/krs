<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>